{"ast":null,"code":"var _jsxFileName = \"D:\\\\TYSCRIPT\\\\Store Intern PG\\\\login\\\\src\\\\modules\\\\table\\\\component\\\\CreateProductDialog.tsx\";\nimport { Col, Row } from 'react-bootstrap';\nimport CustomDialog from '../../../Component/Dialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateProductDialog(_ref) {\n  var _errors$email, _errors$email2;\n  let {\n    open,\n    onClose\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(CustomDialog, {\n    open: true,\n    onClose: onClose,\n    yes: \"L\\u01B0u\",\n    no: \"H\\u1EE7y\",\n    onYesClick: () => {},\n    onConfirmDialogClose: onClose,\n    textTitle: \"T\\u1EA1o s\\u1EA3n ph\\u1EA9m m\\u1EDBi\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [' ', /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: \"invalidCheck\",\n          children: \"Client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"email\",\n          defaultValue: \"\",\n          control: control,\n          rules: {\n            required: true,\n            pattern: /^\\S+@\\S+$/i\n          },\n          render: _ref2 => {\n            let {\n              field\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: \"mt-2\",\n              ...field,\n              isInvalid: !!errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 36\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-danger mt-2 d-block \",\n          style: {\n            fontSize: '14px'\n          },\n          children: [((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === 'required' && /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"require\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 51\n          }, this), ((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === 'pattern' && /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"emailInvalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = CreateProductDialog;\nexport default CreateProductDialog;\nvar _c;\n$RefreshReg$(_c, \"CreateProductDialog\");","map":{"version":3,"names":["Col","Row","CustomDialog","jsxDEV","_jsxDEV","CreateProductDialog","_ref","_errors$email","_errors$email2","open","onClose","yes","no","onYesClick","onConfirmDialogClose","textTitle","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","Controller","name","defaultValue","control","rules","required","pattern","render","_ref2","field","Form","Control","isInvalid","errors","email","style","fontSize","type","FormattedMessage","id","_c","$RefreshReg$"],"sources":["D:/TYSCRIPT/Store Intern PG/login/src/modules/table/component/CreateProductDialog.tsx"],"sourcesContent":["import { Col, Row } from 'react-bootstrap';\r\nimport ConfirmationDialog from '../../../Component/ConfirmationDialog';\r\nimport CustomDialog from '../../../Component/Dialog';\r\ninterface CreateProductDialogProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n}\r\nfunction CreateProductDialog({ open, onClose }: CreateProductDialogProps) {\r\n  return (\r\n    <CustomDialog\r\n      open={true}\r\n      onClose={onClose}\r\n      yes=\"Lưu\"\r\n      no=\"Hủy\"\r\n      onYesClick={() => {}}\r\n      onConfirmDialogClose={onClose}\r\n      textTitle=\"Tạo sản phẩm mới\"\r\n    >\r\n      <Row>\r\n        <Col>\r\n          {' '}\r\n          <label className=\"form-check-label\" htmlFor=\"invalidCheck\">\r\n            Client\r\n          </label>\r\n          <Controller\r\n            name=\"email\"\r\n            defaultValue=\"\"\r\n            control={control}\r\n            rules={{ required: true, pattern: /^\\S+@\\S+$/i }}\r\n            render={({ field }) => <Form.Control className=\"mt-2\" {...field} isInvalid={!!errors.email} />}\r\n          />\r\n          <span className=\"text-danger mt-2 d-block \" style={{ fontSize: '14px' }}>\r\n            {errors.email?.type === 'required' && <FormattedMessage id=\"require\" />}\r\n            {errors.email?.type === 'pattern' && <FormattedMessage id=\"emailInvalid\" />}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </CustomDialog>\r\n  );\r\n}\r\n\r\nexport default CreateProductDialog;\r\n"],"mappings":";AAAA,SAASA,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAE1C,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKrD,SAASC,mBAAmBA,CAAAC,IAAA,EAA8C;EAAA,IAAAC,aAAA,EAAAC,cAAA;EAAA,IAA7C;IAAEC,IAAI;IAAEC;EAAkC,CAAC,GAAAJ,IAAA;EACtE,oBACEF,OAAA,CAACF,YAAY;IACXO,IAAI,EAAE,IAAK;IACXC,OAAO,EAAEA,OAAQ;IACjBC,GAAG,EAAC,UAAK;IACTC,EAAE,EAAC,UAAK;IACRC,UAAU,EAAEA,CAAA,KAAM,CAAC,CAAE;IACrBC,oBAAoB,EAAEJ,OAAQ;IAC9BK,SAAS,EAAC,sCAAkB;IAAAC,QAAA,eAE5BZ,OAAA,CAACH,GAAG;MAAAe,QAAA,eACFZ,OAAA,CAACJ,GAAG;QAAAgB,QAAA,GACD,GAAG,eACJZ,OAAA;UAAOa,SAAS,EAAC,kBAAkB;UAACC,OAAO,EAAC,cAAc;UAAAF,QAAA,EAAC;QAE3D;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eACRlB,OAAA,CAACmB,UAAU;UACTC,IAAI,EAAC,OAAO;UACZC,YAAY,EAAC,EAAE;UACfC,OAAO,EAAEA,OAAQ;UACjBC,KAAK,EAAE;YAAEC,QAAQ,EAAE,IAAI;YAAEC,OAAO,EAAE;UAAa,CAAE;UACjDC,MAAM,EAAEC,KAAA;YAAA,IAAC;cAAEC;YAAM,CAAC,GAAAD,KAAA;YAAA,oBAAK3B,OAAA,CAAC6B,IAAI,CAACC,OAAO;cAACjB,SAAS,EAAC,MAAM;cAAA,GAAKe,KAAK;cAAEG,SAAS,EAAE,CAAC,CAACC,MAAM,CAACC;YAAM;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAG;UAAA;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC/F,eACFlB,OAAA;UAAMa,SAAS,EAAC,2BAA2B;UAACqB,KAAK,EAAE;YAAEC,QAAQ,EAAE;UAAO,CAAE;UAAAvB,QAAA,GACrE,EAAAT,aAAA,GAAA6B,MAAM,CAACC,KAAK,cAAA9B,aAAA,uBAAZA,aAAA,CAAciC,IAAI,MAAK,UAAU,iBAAIpC,OAAA,CAACqC,gBAAgB;YAACC,EAAE,EAAC;UAAS;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,EACtE,EAAAd,cAAA,GAAA4B,MAAM,CAACC,KAAK,cAAA7B,cAAA,uBAAZA,cAAA,CAAcgC,IAAI,MAAK,SAAS,iBAAIpC,OAAA,CAACqC,gBAAgB;YAACC,EAAE,EAAC;UAAc;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACtE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACO;AAEnB;AAACqB,EAAA,GAhCQtC,mBAAmB;AAkC5B,eAAeA,mBAAmB;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}