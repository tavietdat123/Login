{"ast":null,"code":"import { GET_PHOTO_SUCCESS } from './action';\nconst intlPhoto = {\n  listPhoto: [],\n  loading: false\n};\nexport default function photoReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intlPhoto;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_PHOTO_SUCCESS:\n      return {\n        ...state,\n        listPhoto: action.payload\n      };\n    case ON_LOADING:\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_PHOTO_SUCCESS","intlPhoto","listPhoto","loading","photoReducer","state","arguments","length","undefined","action","type","payload","ON_LOADING"],"sources":["D:/TYSCRIPT/Store Intern PG/login/src/modules/photo/redux/reducer.ts"],"sourcesContent":["import { Action } from '../../../redux/reducer/reducerSignUp';\r\nimport { GET_PHOTO_SUCCESS } from './action';\r\n\r\nexport interface IntlPhoto {\r\n  listPhoto: Array<Photo>;\r\n  loading: Boolean;\r\n}\r\nconst intlPhoto = { listPhoto: [], loading: false };\r\nexport interface Photo {\r\n  albumId: number;\r\n  id: number;\r\n  title: string;\r\n  url: string;\r\n  thumbnailUrl: string;\r\n}\r\n\r\nexport default function photoReducer(state: IntlPhoto = intlPhoto, action: Action) {\r\n  switch (action.type) {\r\n    case GET_PHOTO_SUCCESS:\r\n      return { ...state, listPhoto: action.payload };\r\n    case ON_LOADING:\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,iBAAiB,QAAQ,UAAU;AAM5C,MAAMC,SAAS,GAAG;EAAEC,SAAS,EAAE,EAAE;EAAEC,OAAO,EAAE;AAAM,CAAC;AASnD,eAAe,SAASC,YAAYA,CAAA,EAA+C;EAAA,IAA9CC,KAAgB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,SAAS;EAAA,IAAEQ,MAAc,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC/E,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKV,iBAAiB;MACpB,OAAO;QAAE,GAAGK,KAAK;QAAEH,SAAS,EAAEO,MAAM,CAACE;MAAQ,CAAC;IAChD,KAAKC,UAAU;IAEf;MACE,OAAOP,KAAK;EAAC;AAEnB"},"metadata":{},"sourceType":"module"}