{"ast":null,"code":"import { getRegionService, getStateService } from '../../modules/auth/pages/SignUpService';\nexport const GET_REGION_SUCCESS = 'GET_REGION_SUCCESS';\nexport const GET_STATE_SUCCESS = 'GET_STATE_SUCCESS';\nexport const getRegion = () => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await getRegionService();\n      dispatch({\n        type: GET_REGION_SUCCESS,\n        payload: response.data.data\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\nexport const getState = id => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await getStateService(id);\n      dispatch({\n        type: GET_STATE_SUCCESS,\n        payload: response.data.data\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\nexport const registerAction = value => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await register(value);\n      dispatch({\n        type: GET_STATE_SUCCESS,\n        payload: response.data.data\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};","map":{"version":3,"names":["getRegionService","getStateService","GET_REGION_SUCCESS","GET_STATE_SUCCESS","getRegion","dispatch","getState","response","type","payload","data","error","console","id","registerAction","value","register"],"sources":["D:/TYSCRIPT/Store Intern PG/login/src/redux/actions/actionSignUp.ts"],"sourcesContent":["import { ThunkAction } from 'redux-thunk';\r\nimport { getRegionService, getStateService } from '../../modules/auth/pages/SignUpService';\r\nimport { AppState } from '../reducer/reducer';\r\nimport { ISignUpParams } from '../../models/auth';\r\n\r\nexport const GET_REGION_SUCCESS = 'GET_REGION_SUCCESS';\r\nexport const GET_STATE_SUCCESS = 'GET_STATE_SUCCESS';\r\n\r\nexport const getRegion = (): ThunkAction<void, AppState, any, any> => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const response = await getRegionService();\r\n      dispatch({ type: GET_REGION_SUCCESS, payload: response.data.data });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n};\r\nexport const getState = (id: number): ThunkAction<void, AppState, any, any> => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const response = await getStateService(id);\r\n      dispatch({ type: GET_STATE_SUCCESS, payload: response.data.data });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n};\r\nexport const registerAction = (value: ISignUpParams): ThunkAction<void, AppState, any, any> => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const response = await register(value);\r\n      dispatch({ type: GET_STATE_SUCCESS, payload: response.data.data });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AACA,SAASA,gBAAgB,EAAEC,eAAe,QAAQ,wCAAwC;AAI1F,OAAO,MAAMC,kBAAkB,GAAG,oBAAoB;AACtD,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB;AAEpD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAA6C;EACpE,OAAO,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMP,gBAAgB,EAAE;MACzCK,QAAQ,CAAC;QAAEG,IAAI,EAAEN,kBAAkB;QAAEO,OAAO,EAAEF,QAAQ,CAACG,IAAI,CAACA;MAAK,CAAC,CAAC;IACrE,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;AACH,CAAC;AACD,OAAO,MAAML,QAAQ,GAAIO,EAAU,IAA4C;EAC7E,OAAO,OAAOR,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,eAAe,CAACY,EAAE,CAAC;MAC1CR,QAAQ,CAAC;QAAEG,IAAI,EAAEL,iBAAiB;QAAEM,OAAO,EAAEF,QAAQ,CAACG,IAAI,CAACA;MAAK,CAAC,CAAC;IACpE,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;AACH,CAAC;AACD,OAAO,MAAMG,cAAc,GAAIC,KAAoB,IAA4C;EAC7F,OAAO,OAAOV,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMS,QAAQ,CAACD,KAAK,CAAC;MACtCV,QAAQ,CAAC;QAAEG,IAAI,EAAEL,iBAAiB;QAAEM,OAAO,EAAEF,QAAQ,CAACG,IAAI,CAACA;MAAK,CAAC,CAAC;IACpE,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module"}