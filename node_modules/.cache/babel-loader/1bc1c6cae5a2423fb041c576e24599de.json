{"ast":null,"code":"import { getInfoUserService, updateAvatarFileService } from '../serviceProfile';\nimport { toast } from 'react-toastify';\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\nexport const LOG_OUT = 'LOG_OUT';\nexport function getInfoUser() {\n  return async (dispatch, getState) => {\n    try {\n      const res = await getInfoUserService();\n      dispatch({\n        type: GET_USER_SUCCESS,\n        payload: res.data.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function updateAvatar(data) {\n  return async (dispatch, getState) => {\n    try {\n      const res = await updateAvatarFileService(data);\n      if (res) {\n        const response = await getInfoUserService();\n        dispatch({\n          type: GET_USER_SUCCESS,\n          payload: response.data.data\n        });\n        toast.success('Cập nhật Avatar thành công');\n      }\n    } catch (error) {\n      console.log(error);\n      toast.error('Cập nhật Avatar không thành công');\n    }\n  };\n}\nexport function logout() {\n  return {\n    type: LOG_OUT\n  };\n}","map":{"version":3,"names":["getInfoUserService","updateAvatarFileService","toast","GET_USER_SUCCESS","LOG_OUT","getInfoUser","dispatch","getState","res","type","payload","data","error","console","log","updateAvatar","response","success","logout"],"sources":["D:/TYSCRIPT/Store Intern PG/login/src/modules/profile/redux/actionProfile.ts"],"sourcesContent":["import { ThunkAction } from 'redux-thunk';\r\nimport { AppState } from '../../../redux/reducer/reducer';\r\nimport { getInfoUserService, updateAvatarFileService } from '../serviceProfile';\r\nimport { toast } from 'react-toastify';\r\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\r\nexport const LOG_OUT = 'LOG_OUT';\r\nexport function getInfoUser(): ThunkAction<void, AppState, any, any> {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const res = await getInfoUserService();\r\n      dispatch({ type: GET_USER_SUCCESS, payload: res.data.data });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\nexport function updateAvatar(data: any): ThunkAction<void, AppState, any, any> {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const res = await updateAvatarFileService(data);\r\n      if (res) {\r\n        const response = await getInfoUserService();\r\n        dispatch({ type: GET_USER_SUCCESS, payload: response.data.data });\r\n        toast.success('Cập nhật Avatar thành công');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error('Cập nhật Avatar không thành công');\r\n    }\r\n  };\r\n}\r\nexport function logout() {\r\n  return { type: LOG_OUT };\r\n}\r\n"],"mappings":"AAEA,SAASA,kBAAkB,EAAEC,uBAAuB,QAAQ,mBAAmB;AAC/E,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,OAAO,GAAG,SAAS;AAChC,OAAO,SAASC,WAAWA,CAAA,EAA0C;EACnE,OAAO,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMR,kBAAkB,EAAE;MACtCM,QAAQ,CAAC;QAAEG,IAAI,EAAEN,gBAAgB;QAAEO,OAAO,EAAEF,GAAG,CAACG,IAAI,CAACA;MAAK,CAAC,CAAC;IAC9D,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;AACH;AACA,OAAO,SAASG,YAAYA,CAACJ,IAAS,EAAyC;EAC7E,OAAO,OAAOL,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMP,uBAAuB,CAACU,IAAI,CAAC;MAC/C,IAAIH,GAAG,EAAE;QACP,MAAMQ,QAAQ,GAAG,MAAMhB,kBAAkB,EAAE;QAC3CM,QAAQ,CAAC;UAAEG,IAAI,EAAEN,gBAAgB;UAAEO,OAAO,EAAEM,QAAQ,CAACL,IAAI,CAACA;QAAK,CAAC,CAAC;QACjET,KAAK,CAACe,OAAO,CAAC,4BAA4B,CAAC;MAC7C;IACF,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBV,KAAK,CAACU,KAAK,CAAC,kCAAkC,CAAC;IACjD;EACF,CAAC;AACH;AACA,OAAO,SAASM,MAAMA,CAAA,EAAG;EACvB,OAAO;IAAET,IAAI,EAAEL;EAAQ,CAAC;AAC1B"},"metadata":{},"sourceType":"module"}