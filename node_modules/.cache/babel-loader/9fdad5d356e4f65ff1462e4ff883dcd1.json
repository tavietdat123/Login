{"ast":null,"code":"import { GET_PHOTO_SUCCESS } from './action';\nexport default function photoReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    listPhoto: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_PHOTO_SUCCESS:\n      console.log(action.payload);\n      return {\n        ...state,\n        listPhoto: action.payload\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_PHOTO_SUCCESS","photoReducer","state","arguments","length","undefined","listPhoto","action","type","console","log","payload"],"sources":["D:/TYSCRIPT/Store Intern PG/login/src/modules/photo/redux/reducer.ts"],"sourcesContent":["import { Action } from '../../../redux/reducer/reducerSignUp';\r\nimport { GET_PHOTO_SUCCESS } from './action';\r\n\r\nexport interface IntlPhoto {\r\n  listPhoto: Array<Photo>;\r\n}\r\nexport interface Photo {\r\n  albumId: number;\r\n  id: number;\r\n  title: string;\r\n  url: string;\r\n  thumbnailUrl: string;\r\n}\r\n\r\nexport default function photoReducer(state: IntlPhoto = { listPhoto: [] }, action: Action) {\r\n  switch (action.type) {\r\n    case GET_PHOTO_SUCCESS:\r\n      console.log(action.payload);\r\n      return { ...state, listPhoto: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,iBAAiB,QAAQ,UAAU;AAa5C,eAAe,SAASC,YAAYA,CAAA,EAAuD;EAAA,IAAtDC,KAAgB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG;IAAEG,SAAS,EAAE;EAAG,CAAC;EAAA,IAAEC,MAAc,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACvF,QAAQE,MAAM,CAACC,IAAI;IACjB,KAAKR,iBAAiB;MACpBS,OAAO,CAACC,GAAG,CAACH,MAAM,CAACI,OAAO,CAAC;MAC3B,OAAO;QAAE,GAAGT,KAAK;QAAEI,SAAS,EAAEC,MAAM,CAACI;MAAQ,CAAC;IAChD;MACE,OAAOT,KAAK;EAAC;AAEnB"},"metadata":{},"sourceType":"module"}