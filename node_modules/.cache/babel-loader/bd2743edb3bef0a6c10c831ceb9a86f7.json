{"ast":null,"code":"import { createSelector } from 'reselect';\nimport moment from 'moment';\nexport const LoadingFilterSelector = state => state.payroll.loading;\n_c = LoadingFilterSelector;\nexport const payrollSelector = state => state.payroll.payrollTransactionsList;\nexport const filterSelector = state => state.payroll.filter;\nexport const currentProductSelector = state => state.payroll.filter;\nexport const clientSelector = state => {\n  const newdata = state.payroll.payrollTransactionsList.map(el => el.client);\n  const uniqueArr = [...new Set(newdata)];\n  return uniqueArr;\n};\nexport const statusSelector = state => {\n  const newdata = state.payroll.payrollTransactionsList.map(el => el.status);\n  const uniqueArr = [...new Set(newdata)];\n  return uniqueArr;\n};\nexport const payrollRemaining = createSelector(payrollSelector, filterSelector, (listData, _ref) => {\n  let {\n    client,\n    status,\n    dateFrom,\n    dateTo,\n    invoice\n  } = _ref;\n  if (!client && !status && !dateFrom && !dateTo && !invoice) {\n    return listData;\n  }\n  let newListData = [];\n  if (client) {\n    newListData = [...listData.filter(el => el.client === client)];\n  }\n  if (status) {\n    if (newListData.length === 0) {\n      newListData = [...listData.filter(el => el.status === status)];\n    } else if (newListData.length > 0) {\n      newListData = [...newListData.filter(el => el.status === status)];\n    }\n  }\n  if (dateFrom) {\n    if (newListData.length === 0) {\n      newListData = [...listData.filter(el => {\n        const date = moment(el.createdAt);\n        const date1 = moment(dateFrom);\n        const date2 = moment(dateTo);\n        return date.isBefore(date2) && date.isAfter(date1);\n      })];\n    } else if (newListData.length > 0) {\n      newListData = [...newListData.filter(el => {\n        const date = moment(el.createdAt);\n        const date1 = moment(dateFrom);\n        const date2 = moment(dateTo);\n        return date.isBefore(date2) && date.isAfter(date1);\n      })];\n    }\n  }\n  if (invoice) {\n    if (newListData.length === 0) {\n      newListData = [...listData.filter(el => el.invoice && el.invoice.includes(invoice.trim()))];\n    } else if (newListData.length > 0) {\n      newListData = [...newListData.filter(el => el.invoice && el.invoice.includes(invoice.trim()))];\n    }\n  }\n  const uniqueArr = [...new Set(newListData.map(obj => JSON.stringify(obj)))].map(str => JSON.parse(str));\n  return uniqueArr;\n});\nvar _c;\n$RefreshReg$(_c, \"LoadingFilterSelector\");","map":{"version":3,"names":["createSelector","moment","LoadingFilterSelector","state","payroll","loading","_c","payrollSelector","payrollTransactionsList","filterSelector","filter","currentProductSelector","clientSelector","newdata","map","el","client","uniqueArr","Set","statusSelector","status","payrollRemaining","listData","_ref","dateFrom","dateTo","invoice","newListData","length","date","createdAt","date1","date2","isBefore","isAfter","includes","trim","obj","JSON","stringify","str","parse","$RefreshReg$"],"sources":["D:/TYSCRIPT/Store Intern PG/login/src/modules/table/redux/selector.ts"],"sourcesContent":["import { createSelector } from 'reselect';\r\nimport { AppState } from '../../../redux/reducer/reducer';\r\nimport moment from 'moment';\r\nimport { Payroll } from './reducer';\r\n\r\nexport const LoadingFilterSelector = (state: AppState) => state.payroll.loading;\r\nexport const payrollSelector = (state: AppState) => state.payroll.payrollTransactionsList;\r\nexport const filterSelector = (state: AppState) => state.payroll.filter;\r\nexport const currentProductSelector = (state: AppState) => state.payroll.filter;\r\nexport const clientSelector = (state: AppState) => {\r\n  const newdata: Array<string> = state.payroll.payrollTransactionsList.map((el) => el.client);\r\n  const uniqueArr = [...new Set(newdata)];\r\n  return uniqueArr;\r\n};\r\nexport const statusSelector = (state: AppState) => {\r\n  const newdata: Array<string> = state.payroll.payrollTransactionsList.map((el) => el.status);\r\n  const uniqueArr = [...new Set(newdata)];\r\n  return uniqueArr;\r\n};\r\nexport const payrollRemaining = createSelector(\r\n  payrollSelector,\r\n  filterSelector,\r\n  (listData, { client, status, dateFrom, dateTo, invoice }) => {\r\n    if (!client && !status && !dateFrom && !dateTo && !invoice) {\r\n      return listData;\r\n    }\r\n    let newListData: Array<Payroll | undefined> = [];\r\n\r\n    if (client) {\r\n      newListData = [...listData.filter((el) => el.client === client)];\r\n    }\r\n    if (status) {\r\n      if (newListData.length === 0) {\r\n        newListData = [...listData.filter((el) => el.status === status)];\r\n      } else if (newListData.length > 0) {\r\n        newListData = [...newListData.filter((el: any) => el.status === status)];\r\n      }\r\n    }\r\n    if (dateFrom) {\r\n      if (newListData.length === 0) {\r\n        newListData = [\r\n          ...listData.filter((el) => {\r\n            const date = moment(el.createdAt);\r\n            const date1 = moment(dateFrom);\r\n            const date2 = moment(dateTo);\r\n            return date.isBefore(date2) && date.isAfter(date1);\r\n          }),\r\n        ];\r\n      } else if (newListData.length > 0) {\r\n        newListData = [\r\n          ...newListData.filter((el: any) => {\r\n            const date = moment(el.createdAt);\r\n            const date1 = moment(dateFrom);\r\n            const date2 = moment(dateTo);\r\n            return date.isBefore(date2) && date.isAfter(date1);\r\n          }),\r\n        ];\r\n      }\r\n    }\r\n    if (invoice) {\r\n      if (newListData.length === 0) {\r\n        newListData = [...listData.filter((el) => el.invoice && el.invoice.includes(invoice.trim()))];\r\n      } else if (newListData.length > 0) {\r\n        newListData = [...newListData.filter((el: any) => el.invoice && el.invoice.includes(invoice.trim()))];\r\n      }\r\n    }\r\n    const uniqueArr = [...new Set(newListData.map((obj) => JSON.stringify(obj)))].map((str) => JSON.parse(str));\r\n    return uniqueArr;\r\n  },\r\n);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}