{"ast":null,"code":"import { RESPONSE_STATUS_UNAUTHORIZED } from '../../../utils/httpResponseCode';\nimport { ACCESS_TOKEN_KEY } from '../../../utils/constants';\nimport Cookies from 'js-cookie';\nexport function fetchThunk(url) {\n  let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'get';\n  let body = arguments.length > 2 ? arguments[2] : undefined;\n  let auth = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  let contentType = arguments.length > 4 ? arguments[4] : undefined;\n  return async (dispatch, getState) => {\n    const res = await fetch(url, {\n      credentials: 'include',\n      method,\n      body: typeof body === 'object' ? JSON.stringify(body) : body,\n      headers: contentType !== 'multipart/form-data' ? {\n        'Content-Type': contentType || 'application/json',\n        Authorization: Cookies.get(ACCESS_TOKEN_KEY) || ''\n      } : {},\n      cache: 'no-store'\n    });\n    const json = await res.json();\n    if (res.status === RESPONSE_STATUS_UNAUTHORIZED) {\n      // dispatch logout, remove access token here.\n    }\n    return json;\n    // throw new Error('Error');\n  };\n}","map":{"version":3,"names":["RESPONSE_STATUS_UNAUTHORIZED","ACCESS_TOKEN_KEY","Cookies","fetchThunk","url","method","arguments","length","undefined","body","auth","contentType","dispatch","getState","res","fetch","credentials","JSON","stringify","headers","Authorization","get","cache","json","status"],"sources":["D:/TYSCRIPT/Store Intern PG/login/src/modules/common/redux/thunk.ts"],"sourcesContent":["import { Action } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { AppState } from '../../../redux/reducer/reducer';\nimport { RESPONSE_STATUS_UNAUTHORIZED } from '../../../utils/httpResponseCode';\nimport { ACCESS_TOKEN_KEY } from '../../../utils/constants';\nimport Cookies from 'js-cookie';\n\nexport function fetchThunk(\n  url: string,\n  method: 'get' | 'post' | 'delete' | 'put' = 'get',\n  body?: object | FormData,\n  auth = true,\n  contentType?: string,\n): ThunkAction<Promise<any>, AppState, null, Action<string>> {\n  return async (dispatch, getState) => {\n    const res = await fetch(url, {\n      credentials: 'include',\n      method,\n      body: typeof body === 'object' ? JSON.stringify(body) : body,\n      headers:\n        contentType !== 'multipart/form-data'\n          ? {\n              'Content-Type': contentType || 'application/json',\n              Authorization: Cookies.get(ACCESS_TOKEN_KEY) || '',\n            }\n          : {},\n      cache: 'no-store',\n    });\n\n    const json = await res.json();\n\n    if (res.status === RESPONSE_STATUS_UNAUTHORIZED) {\n      // dispatch logout, remove access token here.\n    }\n\n    return json;\n    // throw new Error('Error');\n  };\n}\n"],"mappings":"AAGA,SAASA,4BAA4B,QAAQ,iCAAiC;AAC9E,SAASC,gBAAgB,QAAQ,0BAA0B;AAC3D,OAAOC,OAAO,MAAM,WAAW;AAE/B,OAAO,SAASC,UAAUA,CACxBC,GAAW,EAKgD;EAAA,IAJ3DC,MAAyC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EAAA,IACjDG,IAAwB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAAA,IACxBE,IAAI,GAAAJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAAA,IACXK,WAAoB,GAAAL,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAEpB,OAAO,OAAOI,QAAQ,EAAEC,QAAQ,KAAK;IACnC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACX,GAAG,EAAE;MAC3BY,WAAW,EAAE,SAAS;MACtBX,MAAM;MACNI,IAAI,EAAE,OAAOA,IAAI,KAAK,QAAQ,GAAGQ,IAAI,CAACC,SAAS,CAACT,IAAI,CAAC,GAAGA,IAAI;MAC5DU,OAAO,EACLR,WAAW,KAAK,qBAAqB,GACjC;QACE,cAAc,EAAEA,WAAW,IAAI,kBAAkB;QACjDS,aAAa,EAAElB,OAAO,CAACmB,GAAG,CAACpB,gBAAgB,CAAC,IAAI;MAClD,CAAC,GACD,CAAC,CAAC;MACRqB,KAAK,EAAE;IACT,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMT,GAAG,CAACS,IAAI,EAAE;IAE7B,IAAIT,GAAG,CAACU,MAAM,KAAKxB,4BAA4B,EAAE;MAC/C;IAAA;IAGF,OAAOuB,IAAI;IACX;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module"}